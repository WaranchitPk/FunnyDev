{"version":3,"sources":["../src/containers/User.js"],"names":["User","state","format","ChangeValueFormYear","props","dispatch","year","handleSelect","event","setState","target","name","value","handleTabsChange","yearValueViewYear","yearAll","yearUserUse","handleSelectYear","log","handleSelectYearUserUse","handleSelectYearAndMonth","handleSelectYearAndMonthUserUse_Year","handleSelectYearAndMonthUserUse_Month","handleSubmitYearUserView","valueTabs","handleSelectYearUserViewDays","handleSelectMonthUserViewDays","handleSubmitUserViewDays","yearAndMonth","month","yearAndMonthUserUse","monthUse","handleChangeBtNavigateUserView","getYearNow","get","api","handleChangeBtNavigateUserUse","handleChangePageUserView","page","handleChangeRowsPerPageUserView","rowsPerPage","Component","getCurrentYear","UserViewdataMonth","valueYear","valueMonth","UserViewdataDay","UserUsedataMonth","UserUsedataDay","sumYearUse","UserUse_FindTrain","mapStateToProps","FindValueMonth","data","FindValueYear","UserViewFindChooseMonth","UserViewFindChooseYear","UserUseFindChooseYear","UserUseFindChooseMonth","UserViewFindSumYear","UserUseFindTrain"],"mappings":"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","file":"User.5ab95893.map","sourceRoot":"../public","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {UserComponent} from \"../components\";\nimport moment from \"moment\";\nimport {\n    y2018Action,\n    findValueYear,\n    findValueMonth,\n    UserViewFindMonthData,\n    UserViewFindDayData,\n    UserUseFindMonthData,\n    UserUseFindDayData,\n    UserViewFindSumYear,\n    UserUseFindTrain\n} from \"../actions\";\nimport axios from \"axios\";\nimport {api} from \"../config\";\n\n\nclass User extends Component {\n    state = {\n        valueBtNavigateUserView: \"\",\n        valueBtNavigateUserUse: \"\",\n        yearValueViewYear: +moment().format(\"YYYY\"),\n        yearUserUse: +moment().format(\"YYYY\"),\n        quarter: 1,\n        showMonth: 3,\n        month: 1,\n        valueTabs: 0,\n        rowsPerPage: 5,\n        page: 0,\n        yearAndMonth: +moment().format(\"YYYY\"),\n        yearAndMonthUserUse: +moment().format(\"YYYY\"),\n        monthUse: 1,\n        yearAll: +moment().format(\"YYYY\")\n    };\n\n    componentDidMount() {\n        const getCurrentYear = +moment().format(\"YYYY\");\n        this.props.dispatch(findValueYear(getCurrentYear));\n        this.props.dispatch(UserUseFindTrain(this.state.yearAll))\n    }\n\n    ChangeValueFormYear = () => {\n        this.props.dispatch(y2018Action(this.state.year));\n    };\n\n    handleSelect = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n    //tab change\n    handleTabsChange = (event, value) => {\n        const {yearValueViewYear, yearUserUse, yearAll} = this.state;\n        this.setState({\n            valueTabs: value\n        });\n        if (value === 0) {\n            this.props.dispatch(UserViewFindMonthData(yearValueViewYear));\n        } else {\n            this.props.dispatch(UserUseFindMonthData(yearAll));\n        }\n    };\n    //set value year on select\n    handleSelectYear = ({target: {value}}) => {\n        console.log('select')\n        this.setState({\n            yearValueViewYear: value\n        });\n    };\n    handleSelectYearUserUse = ({target: {value}}) => {\n        console.log('select USer Use Month')\n        this.setState({\n            yearUserUse: value\n        });\n    };\n    handleSelectYearAndMonth = ({target: {value}}) => {\n        this.setState({\n            yearAndMonth: value\n        })\n        this.props.dispatch(findValueMonth(value));\n    }\n    //select year and month user use : year\n    handleSelectYearAndMonthUserUse_Year = ({target: {value}}) => {\n        this.setState({\n            yearAndMonthUserUse: value\n        });\n        this.props.dispatch(findValueMonth(value));\n    };\n    //select year and month user use : month\n    handleSelectYearAndMonthUserUse_Month = ({target: {value}}) => {\n        this.setState({\n            monthUse: value\n        });\n    };\n    //submitSelectYear To Show Month Chart\n    handleSubmitYearUserView = () => {\n        if (this.state.valueTabs === 0) {\n            this.props.dispatch(UserViewFindMonthData(this.state.yearValueViewYear));\n        } else {\n            this.props.dispatch(UserUseFindMonthData(this.state.yearUserUse));\n        }\n    };\n    //set value month && year\n    handleSelectYearUserViewDays = ({target: {value}}) => {\n        this.setState({\n            yearAndMonth: value\n        });\n        this.props.dispatch(findValueMonth(value));\n    };\n    handleSelectMonthUserViewDays = ({target: {value}}) => {\n        this.setState({\n            month: value\n        });\n    };\n    //submitSelectYearAndMonth To Show Month Chart\n    handleSubmitUserViewDays = () => {\n        const {yearAndMonth, month,yearAndMonthUserUse,monthUse} = this.state;\n        if (this.state.valueTabs === 0) {\n            this.props.dispatch(UserViewFindDayData(yearAndMonth, month));\n        } else {\n            this.props.dispatch(UserUseFindDayData(yearAndMonthUserUse, monthUse));\n        }\n    };\n\n    //change Bt Navigate User View\n    handleChangeBtNavigateUserView = (event, value) => {\n        const {year, month, yearAll} = this.state;\n\n        this.setState({\n            valueBtNavigateUserView: value,\n            valueBtNavigateUserUse: \"\"\n        });\n        if (value === 0) {\n            const getYearNow = +moment().format(\"YYYY\");\n            this.props.dispatch(UserViewFindSumYear(getYearNow));\n        } else if (value === 1) {\n            // this.props.dispatch(UserViewFindMonthData(this.state.yearAll));\n            // this.props.dispatch(UserViewFindMonthData(this.state.yearAll));\n            // this.props.dispatch(FindValueYear());\n        } else if (value === 2) {\n            this.props.dispatch(findValueMonth(yearAll));\n            axios.get(`${api}/users/userview/findMonth/${yearAll}/${month}`)\n            this.props.dispatch(UserViewFindDayData(yearAll, month));\n            // this.props.dispatch(FindValueYear());\n        }\n    };\n    //change Bt Navigate User Use\n    handleChangeBtNavigateUserUse = (event, value) => {\n        this.setState({\n            valueBtNavigateUserUse: value,\n            valueBtNavigateUserView: \"\"\n        });\n        if (value === 0) {\n            this.props.dispatch(UserViewFindMonthData(this.state.yearAll));\n            // this.props.dispatch(FindValueYear());\n        } else if (value === 1) {\n            // this.props.dispatch(UserUseFindView(this.state.yearAll));\n            // this.props.dispatch(FindValueYear());\n        } else if (value === 2) {\n            this.props.dispatch(findValueMonth(this.state.yearAll));\n            this.props.dispatch(UserUseFindDayData(this.state.yearAll, this.state.month));\n            // this.props.dispatch(FindValueYear());\n        }\n    };\n    //change page in result card UserViewDays\n    handleChangePageUserView = (event, page) => {\n        this.setState({page});\n    };\n    //change row per page in in result card UserViewDays\n    handleChangeRowsPerPageUserView = event => {\n        this.setState({rowsPerPage: event.target.value});\n    };\n\n    render() {\n        const {UserViewdataMonth, valueYear, valueMonth, UserViewdataDay, UserUsedataMonth, UserUsedataDay, sumYearUse, UserUse_FindTrain} = this.props;\n        return (\n            <div>\n                <UserComponent\n                    {...this.state}\n                    onSubmit={this.ChangeValueFormYear}\n                    onSelect={this.handleSelect}\n                    dataMonthChart={UserViewdataMonth}\n                    changeTabs={this.handleTabsChange}\n                    changeBtNavigateUserView={this.handleChangeBtNavigateUserView}\n                    changeBtNavigateUserUse={this.handleChangeBtNavigateUserUse}\n                    valueYear={valueYear}\n                    selectYear={this.handleSelectYear}\n                    submitSelectYear={this.handleSubmitYearUserView}\n                    valueUserViewDaysMonth={valueMonth}\n                    selectUserViewDaysYear={this.handleSelectYearUserViewDays}\n                    selectUserViewDaysMonth={this.handleSelectMonthUserViewDays}\n                    submitSelectUserViewDays={this.handleSubmitUserViewDays}\n                    dataDayChart={UserViewdataDay}\n                    onChangePageTableInResultCardUserViewDays={this.handleChangePageUserView}\n                    onChangeRowPerPageTableInResultCardUserViewDays={this.handleChangeRowsPerPageUserView}\n                    dataMonthChartUserUse={UserUsedataMonth}\n                    dataDayChartUserUse={UserUsedataDay}\n                    resultSumUserView={sumYearUse}\n                    resultSumTrainUserUse={UserUse_FindTrain}\n                    selectYearAndMonth={this.handleSelectYearAndMonth}\n                    yearValueViewYear={this.state.yearValueViewYear}\n                    selectYearUserUse={this.handleSelectYearUserUse}\n                    yearValueUseYear={this.state.yearUserUse}\n                    yearAndMonthUserUse={this.state.yearAndMonthUserUse}\n                    monthUse={this.state.monthUse}\n                    selectYearAndMonthUserUse_Year={this.handleSelectYearAndMonthUserUse_Year}\n                    selectYearAndMonthUserUse_Month={this.handleSelectYearAndMonthUserUse_Month}/>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => (\n    {\n        valueMonth: state.FindValueMonth.data,\n        valueYear: state.FindValueYear.data,\n        UserViewdataDay: state.UserViewFindChooseMonth.data,\n        UserViewdataMonth: state.UserViewFindChooseYear.data,\n        UserUsedataMonth: state.UserUseFindChooseYear.data,\n        UserUsedataDay: state.UserUseFindChooseMonth.data,\n        sumYearUse: state.UserViewFindSumYear.data,\n        UserUse_FindTrain: state.UserUseFindTrain.data\n    }\n);\nexport default connect(mapStateToProps)(User);\n"]}