{"version":3,"sources":["../src/containers/Home.js"],"names":["arrDataCourseAnalytic","arrDataUserUse","arr1","arr2","arr3","result","concat","Home","state","format","Component","year","props","dispatch","yearAll","DashBData","Campus","TrainAllCampus","UserUse_FindTrain","resultTrainAllCampus","data","map","value","index","countUserUse","CountYear","resultTrainCourseAndUserUse","mapStateToProps","DashBoardReducer","DashBoardCoursesReducers","FindCourseAllCampusGraph","UserUseFindTrain"],"mappings":"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","file":"Home.4565ced4.map","sourceRoot":"../public","sourcesContent":["import React, {Component} from \"react\";\nimport {HomeComponent} from \"../components\";\nimport {connect} from \"react-redux\";\nimport {\n    DashBoardAction,\n    dashBoardCoursesCampus,\n    findGraphtrain, UserUseFindTrain\n} from \"../actions\";\nimport moment from \"moment\";\nimport axios from 'axios';\nlet arrDataCourseAnalytic = [\n    {\n        yearShow: 2009,\n        countCourse: 100\n    },\n    {\n        yearShow: 2010,\n        countCourse: 150\n    },\n    {\n        yearShow: 2011,\n        countCourse: 200\n    },\n    {\n        yearShow: 2012,\n        countCourse: 230\n    },\n    {\n        yearShow: 2013,\n        countCourse: 220\n    },\n    {\n        yearShow: 2014,\n        countCourse: 350\n    },\n    {\n        yearShow: 2015,\n        countCourse: 120\n    }\n];\n\nconst arrDataUserUse = [\n    {\n        yearShow: 2009,\n        CountYear: 1201\n    },\n    {\n        Year: 2010,\n        CountYear: 1209\n    },\n    {\n        Year: 2011,\n        CountYear: 1284\n    },\n    {\n        Year: 2012,\n        CountYear: 1283\n    },\n    {\n        Year: 2013,\n        CountYear: 1726\n    },\n    {\n        Year: 2014,\n        CountYear: 1009\n    },\n    {\n        Year: 2015,\n        CountYear: 985\n    },\n    {\n        Year: 2016,\n        CountYear: 1029\n    },\n    {\n        Year: 2017,\n        CountYear: 4012\n    },\n    {\n        Year: 2018,\n        CountYear: 3688\n    }\n];\nconst arr1 = [\n    {\n        id: 1,\n        value: 2\n    }\n];\nconst arr2 = [\n    {\n        id: 2,\n        value: 3\n    }\n]\nconst arr3 = [];\nconst result = arr3.concat(arr3, arr1, arr2)\n\nclass Home extends Component {\n    state = {\n        year: moment().format(\"YYYY\")\n    };\n\n    componentDidMount() {\n        const {year} = this.state;\n        this.props.dispatch(DashBoardAction());\n        this.props.dispatch(dashBoardCoursesCampus());\n        this.props.dispatch(findGraphtrain(year));\n        this.props.dispatch(UserUseFindTrain(this.state.yearAll))\n    }\n\n    render() {\n        const {DashBData, Campus, TrainAllCampus, UserUse_FindTrain} = this.props;\n        let resultTrainAllCampus = [];\n        let resultAllDataShowChartCompare = [];\n        if (TrainAllCampus !== null && TrainAllCampus !== undefined) {\n            resultTrainAllCampus = resultTrainAllCampus.concat(arrDataCourseAnalytic, TrainAllCampus.data.result);\n            resultTrainAllCampus.map((value, index) => {\n                value.countUserUse = arrDataUserUse[index].CountYear;\n                resultAllDataShowChartCompare = value;\n\n            });\n        }\n        let resultTrainCourseAndUserUse = []\n        // if (TrainAllCampus !== null && TrainAllCampus != undefined) {\n        //     TrainAllCampus.data.result.slice(1).map((value, index) => {\n        //         // console.log('aaa',UserUse_FindTrain.data.result[index].sumUser)\n        //         value.countUserUse = UserUse_FindTrain.data.result[index].sumUser\n        //         resultTrainCourseAndUserUse = value\n        //     })\n        // }\n        return (\n            <div>\n                <HomeComponent\n                    data={DashBData}\n                    CourseAnalyticData={Campus}\n                    mockDataCourseAnalytic={arrDataCourseAnalytic}\n                    mockDataUserUse={arrDataUserUse}\n                    CompareUserUseAndCourse={resultTrainAllCampus}\n                    compareUserTrainAndTrainCours={resultTrainCourseAndUserUse}\n                    UserUseTrain={UserUse_FindTrain}\n                    CourseTrain={TrainAllCampus}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => (\n    {\n        DashBData: state.DashBoardReducer,\n        Campus: state.DashBoardCoursesReducers,\n        TrainAllCampus: state.FindCourseAllCampusGraph.data,\n        UserUse_FindTrain: state.UserUseFindTrain.data\n    }\n);\n\nexport default connect(mapStateToProps)(Home);\n"]}